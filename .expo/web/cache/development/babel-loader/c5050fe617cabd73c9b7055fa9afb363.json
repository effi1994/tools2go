{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItem from \"../Components/lists/ListItem\";\nimport Screen from \"../Components/Screen\";\nimport ListItemSeparator from \"../Components/lists/ListItemSeparator\";\nimport ListItemDeleteAction from \"../Components/lists/ListItemDeleteAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar initialMessages = [{\n  id: 1,\n  title: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quod.\",\n  description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quod. /n Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quod. \",\n  image: require(\"../assets/images/mosh.jpg\")\n}, {\n  id: 2,\n  title: \"T2\",\n  description: \"D2\",\n  image: require(\"../assets/images/mosh.jpg\")\n}];\nfunction MessagesScreen(props) {\n  var _useState = useState(initialMessages),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n  return _jsx(Screen, {\n    children: _jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(message) {\n        return message.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ListItem, {\n          title: item.title,\n          subTitle: item.description,\n          image: item.image,\n          onPress: function onPress() {\n            return console.log(\"Message selected\", item);\n          },\n          renderRightActions: function renderRightActions() {\n            return _jsx(ListItemDeleteAction, {\n              onPress: function onPress() {\n                return handleDelete(item);\n              }\n            });\n          }\n        });\n      },\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return _jsx(ListItemSeparator, {});\n      },\n      refreshing: refreshing,\n      onRefresh: function onRefresh() {\n        setMessages([{\n          id: 2,\n          title: \"T2\",\n          description: \"D2\",\n          image: require(\"../assets/images/mosh.jpg\")\n        }]);\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({});\nexport default MessagesScreen;","map":{"version":3,"names":["React","useState","ListItem","Screen","ListItemSeparator","ListItemDeleteAction","initialMessages","id","title","description","image","require","MessagesScreen","props","messages","setMessages","refreshing","setRefreshing","handleDelete","message","filter","m","toString","item","console","log","styles","StyleSheet","create"],"sources":["D:/coues-React Native/Tools2Go/app/screens/MessagesScreen.js"],"sourcesContent":["\r\nimport React,{useState} from 'react';\r\nimport { FlatList,StyleSheet ,View} from 'react-native';\r\nimport ListItem from '../Components/lists/ListItem';\r\nimport Screen from '../Components/Screen';\r\nimport ListItemSeparator from '../Components/lists/ListItemSeparator';\r\nimport ListItemDeleteAction from '../Components/lists/ListItemDeleteAction';\r\n\r\nconst initialMessages = [\r\n       {\r\n              id: 1,\r\n              title: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quod.\",\r\n              description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quod. /n Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quod. \",\r\n              image: require(\"../assets/images/mosh.jpg\")\r\n       },\r\n       {\r\n              id: 2,\r\n              title: \"T2\",\r\n              description: \"D2\",\r\n              image: require(\"../assets/images/mosh.jpg\")\r\n       },\r\n]\r\n\r\nfunction MessagesScreen(props) {\r\n       const [messages, setMessages] = useState(initialMessages);\r\n       const [refreshing, setRefreshing] = useState(false);\r\n     \r\n\r\n\r\n\r\n       const handleDelete = message => {\r\n              // Delete the message from messages\r\n             setMessages(messages.filter(m => m.id !== message.id));\r\n       }\r\n\r\n       return (\r\n              <Screen  >\r\n                     <FlatList\r\n                            data={messages}\r\n                            keyExtractor={message => message.id.toString()}\r\n                            renderItem={({ item }) =>\r\n                                   <ListItem\r\n                                          title={item.title}\r\n                                          subTitle={item.description}\r\n                                          image={item.image}\r\n                                          onPress={() => console.log(\"Message selected\", item)}\r\n                                          renderRightActions={ () =>\r\n                                                  <ListItemDeleteAction onPress={() => handleDelete(item)} />\r\n                                                 } \r\n                                           />} \r\n                                          ItemSeparatorComponent={()=> (<ListItemSeparator/>)}\r\n                                          refreshing={refreshing}\r\n                                          onRefresh={() => {\r\n                                                 setMessages([\r\n                                                        {\r\n                                                               id: 2,\r\n                                                               title: \"T2\",\r\n                                                               description: \"D2\",\r\n                                                               image: require(\"../assets/images/mosh.jpg\")\r\n                                                        },\r\n                                                 ])\r\n                                          }}\r\n                                          \r\n                                          />\r\n              </Screen>\r\n\r\n       );\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n     \r\n\r\nexport default MessagesScreen;"],"mappings":";AACA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAErC,OAAOC,QAAQ;AACf,OAAOC,MAAM;AACb,OAAOC,iBAAiB;AACxB,OAAOC,oBAAoB;AAAiD;AAE5E,IAAMC,eAAe,GAAG,CACjB;EACOC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,0EAA0E;EACjFC,WAAW,EAAE,uJAAuJ;EACpKC,KAAK,EAAEC,OAAO;AACrB,CAAC,EACD;EACOJ,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAEC,OAAO;AACrB,CAAC,CACP;AAED,SAASC,cAAc,CAACC,KAAK,EAAE;EACxB,gBAAgCZ,QAAQ,CAACK,eAAe,CAAC;IAAA;IAAlDQ,QAAQ;IAAEC,WAAW;EAC5B,iBAAoCd,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5Ce,UAAU;IAAEC,aAAa;EAKhC,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAGC,OAAO,EAAI;IAE1BJ,WAAW,CAACD,QAAQ,CAACM,MAAM,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACd,EAAE,KAAKY,OAAO,CAACZ,EAAE;IAAA,EAAC,CAAC;EAC5D,CAAC;EAED,OACO,KAAC,MAAM;IAAA,UACA,KAAC,QAAQ;MACF,IAAI,EAAEO,QAAS;MACf,YAAY,EAAE,sBAAAK,OAAO;QAAA,OAAIA,OAAO,CAACZ,EAAE,CAACe,QAAQ,EAAE;MAAA,CAAC;MAC/C,UAAU,EAAE;QAAA,IAAGC,IAAI,QAAJA,IAAI;QAAA,OACZ,KAAC,QAAQ;UACF,KAAK,EAAEA,IAAI,CAACf,KAAM;UAClB,QAAQ,EAAEe,IAAI,CAACd,WAAY;UAC3B,KAAK,EAAEc,IAAI,CAACb,KAAM;UAClB,OAAO,EAAE;YAAA,OAAMc,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;UAAA,CAAC;UACrD,kBAAkB,EAAG;YAAA,OACb,KAAC,oBAAoB;cAAC,OAAO,EAAE;gBAAA,OAAML,YAAY,CAACK,IAAI,CAAC;cAAA;YAAC,EAAG;UAAA;QAC3D,EACL;MAAA,CAAC;MACJ,sBAAsB,EAAE;QAAA,OAAM,KAAC,iBAAiB,KAAE;MAAA,CAAE;MACpD,UAAU,EAAEP,UAAW;MACvB,SAAS,EAAE,qBAAM;QACVD,WAAW,CAAC,CACL;UACOR,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,IAAI;UACXC,WAAW,EAAE,IAAI;UACjBC,KAAK,EAAEC,OAAO;QACrB,CAAC,CACP,CAAC;MACT;IAAE;EAEA,EACrB;AAGvB;AAEA,IAAMe,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AAGpC,eAAehB,cAAc"},"metadata":{},"sourceType":"module"}