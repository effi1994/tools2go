{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React from 'react';\nimport { useFormikContext } from 'formik';\nimport ImageInputList from \"./../ImageInputList\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction FormImagePicker(_ref) {\n  var name = _ref.name;\n  var _useFormikContext = useFormikContext(),\n    errors = _useFormikContext.errors,\n    setFieldValue = _useFormikContext.setFieldValue,\n    touched = _useFormikContext.touched,\n    values = _useFormikContext.values;\n  var imageUris = values[name];\n  var handleAdd = function handleAdd(uri) {\n    setFieldValue(name, [].concat(_toConsumableArray(imageUris), [uri]));\n  };\n  var handleRemove = function handleRemove(uri) {\n    setFieldValue(name, imageUris.filter(function (imageUri) {\n      return imageUri !== uri;\n    }));\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(ImageInputList, {\n      imageUris: imageUris,\n      onAddImage: handleAdd,\n      onRemoveImage: handleRemove\n    }), _jsx(ErrorMessage, {\n      error: errors[name],\n      visible: touched[name]\n    })]\n  });\n}\nexport default FormImagePicker;","map":{"version":3,"names":["React","useFormikContext","ImageInputList","ErrorMessage","FormImagePicker","name","errors","setFieldValue","touched","values","imageUris","handleAdd","uri","handleRemove","filter","imageUri"],"sources":["D:/coues-React Native/Tools2Go/app/Components/forms/FormImagePicker.js"],"sourcesContent":["import React from 'react';\r\nimport { useFormikContext } from 'formik';\r\n\r\nimport ImageInputList from './../ImageInputList';\r\nimport ErrorMessage from './ErrorMessage';\r\nfunction FormImagePicker({ name }) {\r\n       const { errors, setFieldValue, touched, values } = useFormikContext();\r\n       const imageUris = values[name];\r\n       const handleAdd = uri => {\r\n              setFieldValue(name, [...imageUris, uri]);\r\n       };\r\n\r\n       const handleRemove = uri => {\r\n              setFieldValue(name, imageUris.filter(imageUri => imageUri !== uri));\r\n       };\r\n\r\n       return (\r\n              <>\r\n                     <ImageInputList\r\n                            imageUris={imageUris}\r\n                            onAddImage={handleAdd}\r\n                            onRemoveImage={handleRemove}\r\n                     />\r\n                     <ErrorMessage error={errors[name]} visible={touched[name]} />\r\n\r\n              </>\r\n\r\n\r\n       );\r\n}\r\n\r\n\r\n\r\nexport default FormImagePicker;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,QAAQ;AAEzC,OAAOC,cAAc;AACrB,OAAOC,YAAY;AAAuB;AAAA;AAAA;AAC1C,SAASC,eAAe,OAAW;EAAA,IAARC,IAAI,QAAJA,IAAI;EACxB,wBAAmDJ,gBAAgB,EAAE;IAA7DK,MAAM,qBAANA,MAAM;IAAEC,aAAa,qBAAbA,aAAa;IAAEC,OAAO,qBAAPA,OAAO;IAAEC,MAAM,qBAANA,MAAM;EAC9C,IAAMC,SAAS,GAAGD,MAAM,CAACJ,IAAI,CAAC;EAC9B,IAAMM,SAAS,GAAG,SAAZA,SAAS,CAAGC,GAAG,EAAI;IAClBL,aAAa,CAACF,IAAI,+BAAMK,SAAS,IAAEE,GAAG,GAAE;EAC/C,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAGD,GAAG,EAAI;IACrBL,aAAa,CAACF,IAAI,EAAEK,SAAS,CAACI,MAAM,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,KAAKH,GAAG;IAAA,EAAC,CAAC;EAC1E,CAAC;EAED,OACO;IAAA,WACO,KAAC,cAAc;MACR,SAAS,EAAEF,SAAU;MACrB,UAAU,EAAEC,SAAU;MACtB,aAAa,EAAEE;IAAa,EACjC,EACF,KAAC,YAAY;MAAC,KAAK,EAAEP,MAAM,CAACD,IAAI,CAAE;MAAC,OAAO,EAAEG,OAAO,CAACH,IAAI;IAAE,EAAG;EAAA,EAEjE;AAIjB;AAIA,eAAeD,eAAe"},"metadata":{},"sourceType":"module"}