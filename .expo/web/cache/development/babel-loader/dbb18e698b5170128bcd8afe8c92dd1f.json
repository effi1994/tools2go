{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport * as Notifications from 'expo-notifications';\nimport * as Yup from \"yup\";\nimport { AppForm, AppFormField, SubmitButton } from \"./forms\";\nimport messagesApi from \"../api/messages\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nNotifications.setNotificationHandler({\n  handleNotification: function () {\n    var _handleNotification = _asyncToGenerator(function* () {\n      return {\n        shouldShowAlert: true,\n        shouldPlaySound: true,\n        shouldSetBadge: true\n      };\n    });\n    function handleNotification() {\n      return _handleNotification.apply(this, arguments);\n    }\n    return handleNotification;\n  }()\n});\nfunction ContactSellerForm(_ref) {\n  var listing = _ref.listing;\n  var handleSubmit = function () {\n    var _ref4 = _asyncToGenerator(function* (_ref2, _ref3) {\n      var message = _ref2.message;\n      var resetForm = _ref3.resetForm;\n      Keyboard.dismiss();\n      var result = yield messagesApi.sendMessage(message, listing.id);\n      if (!result.ok) {\n        console.log(\"Error\", result);\n        return Alert.alert(\"Error\", \"Could not send the message to the seller.\");\n      }\n      resetForm();\n      Notifications.scheduleNotificationAsync({\n        content: {\n          title: \"Awesome!\",\n          body: \"Your message was sent to the seller.\"\n        },\n        trigger: null\n      });\n    });\n    return function handleSubmit(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(AppForm, {\n    initialValues: {\n      message: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    children: [_jsx(AppFormField, {\n      maxLength: 255,\n      multiline: true,\n      name: \"message\",\n      numberOfLines: 3,\n      placeholder: \"Message...\"\n    }), _jsx(SubmitButton, {\n      title: \"Contact Seller\"\n    })]\n  });\n}\nvar validationSchema = Yup.object().shape({\n  message: Yup.string().required().min(1).label(\"Message\")\n});\nexport default ContactSellerForm;","map":{"version":3,"names":["React","Notifications","Yup","AppForm","AppFormField","SubmitButton","messagesApi","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","ContactSellerForm","listing","handleSubmit","message","resetForm","Keyboard","dismiss","result","sendMessage","id","ok","console","log","Alert","alert","scheduleNotificationAsync","content","title","body","trigger","validationSchema","object","shape","string","required","min","label"],"sources":["D:/coues-React Native/Tools2Go/app/Components/ContactSellerFrom.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { Alert, Keyboard } from \"react-native\";\r\nimport * as Notifications from 'expo-notifications';\r\nimport * as Yup from \"yup\";\r\n\r\nimport { AppForm, AppFormField, SubmitButton, } from \"./forms\";\r\nimport messagesApi from \"../api/messages\";\r\n\r\nNotifications.setNotificationHandler({\r\n       handleNotification: async () => ({\r\n              shouldShowAlert: true,\r\n              shouldPlaySound: true,\r\n              shouldSetBadge: true,\r\n       }),\r\n});\r\n\r\n\r\nfunction ContactSellerForm({ listing }) {\r\n       const handleSubmit = async ({ message }, { resetForm }) => {\r\n              Keyboard.dismiss();\r\n\r\n              const result = await messagesApi.sendMessage(message, listing.id);\r\n\r\n              if (!result.ok) {\r\n                     console.log(\"Error\", result);\r\n                     return Alert.alert(\"Error\", \"Could not send the message to the seller.\");\r\n              }\r\n\r\n              resetForm();\r\n              Notifications.scheduleNotificationAsync({\r\n                     content: {\r\n                             title: \"Awesome!\",\r\n                                   body: \"Your message was sent to the seller.\",\r\n                     },\r\n                     trigger: null,\r\n              });\r\n\r\n\r\n\r\n\r\n       };\r\n\r\n       return (\r\n              <AppForm\r\n                     initialValues={{ message: \"\" }}\r\n                     onSubmit={handleSubmit}\r\n                     validationSchema={validationSchema}\r\n              >\r\n                     <AppFormField\r\n                            maxLength={255}\r\n                            multiline\r\n                            name=\"message\"\r\n                            numberOfLines={3}\r\n                            placeholder=\"Message...\"\r\n                     />\r\n                     <SubmitButton title=\"Contact Seller\" />\r\n              </AppForm>\r\n       );\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n       message: Yup.string().required().min(1).label(\"Message\"),\r\n});\r\n\r\nexport default ContactSellerForm;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AACnD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAE1B,SAASC,OAAO,EAAEC,YAAY,EAAEC,YAAY;AAC5C,OAAOC,WAAW;AAAwB;AAAA;AAE1CL,aAAa,CAACM,sBAAsB,CAAC;EAC9BC,kBAAkB;IAAA,4CAAE;MAAA,OAAa;QAC1BC,eAAe,EAAE,IAAI;QACrBC,eAAe,EAAE,IAAI;QACrBC,cAAc,EAAE;MACvB,CAAC;IAAA,CAAC;IAAA;MAAA;IAAA;IAAA;EAAA;AACT,CAAC,CAAC;AAGF,SAASC,iBAAiB,OAAc;EAAA,IAAXC,OAAO,QAAPA,OAAO;EAC7B,IAAMC,YAAY;IAAA,8BAAG,yBAAsC;MAAA,IAA7BC,OAAO,SAAPA,OAAO;MAAA,IAAMC,SAAS,SAATA,SAAS;MAC7CC,QAAQ,CAACC,OAAO,EAAE;MAElB,IAAMC,MAAM,SAASb,WAAW,CAACc,WAAW,CAACL,OAAO,EAAEF,OAAO,CAACQ,EAAE,CAAC;MAEjE,IAAI,CAACF,MAAM,CAACG,EAAE,EAAE;QACTC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,MAAM,CAAC;QAC5B,OAAOM,KAAK,CAACC,KAAK,CAAC,OAAO,EAAE,2CAA2C,CAAC;MAC/E;MAEAV,SAAS,EAAE;MACXf,aAAa,CAAC0B,yBAAyB,CAAC;QACjCC,OAAO,EAAE;UACDC,KAAK,EAAE,UAAU;UACXC,IAAI,EAAE;QACpB,CAAC;QACDC,OAAO,EAAE;MAChB,CAAC,CAAC;IAKT,CAAC;IAAA,gBAtBKjB,YAAY;MAAA;IAAA;EAAA,GAsBjB;EAED,OACO,MAAC,OAAO;IACD,aAAa,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAC/B,QAAQ,EAAED,YAAa;IACvB,gBAAgB,EAAEkB,gBAAiB;IAAA,WAEnC,KAAC,YAAY;MACN,SAAS,EAAE,GAAI;MACf,SAAS;MACT,IAAI,EAAC,SAAS;MACd,aAAa,EAAE,CAAE;MACjB,WAAW,EAAC;IAAY,EAC7B,EACF,KAAC,YAAY;MAAC,KAAK,EAAC;IAAgB,EAAG;EAAA,EACpC;AAExB;AAEA,IAAMA,gBAAgB,GAAG9B,GAAG,CAAC+B,MAAM,EAAE,CAACC,KAAK,CAAC;EACrCnB,OAAO,EAAEb,GAAG,CAACiC,MAAM,EAAE,CAACC,QAAQ,EAAE,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,SAAS;AAC9D,CAAC,CAAC;AAEF,eAAe1B,iBAAiB"},"metadata":{},"sourceType":"module"}