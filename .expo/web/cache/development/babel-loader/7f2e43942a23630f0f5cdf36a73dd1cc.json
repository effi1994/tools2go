{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport * as Location from 'expo-location';\nexport default useLocation = function useLocation() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var getLocation = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var result = yield Location.requestForegroundPermissionsAsync();\n        if (!result.granted) return;\n        var _yield$Location$getLa = yield Location.getLastKnownPositionAsync(),\n          _yield$Location$getLa2 = _yield$Location$getLa.coords,\n          latitude = _yield$Location$getLa2.latitude,\n          longitude = _yield$Location$getLa2.longitude;\n        setLocation({\n          latitude: latitude,\n          longitude: longitude\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function getLocation() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getLocation();\n  }, []);\n  return location;\n};","map":{"version":3,"names":["useState","useEffect","Location","useLocation","location","setLocation","getLocation","result","requestForegroundPermissionsAsync","granted","getLastKnownPositionAsync","coords","latitude","longitude","error","console","log"],"sources":["D:/coues-React Native/Tools2Go/app/hooks/useLocation.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport * as Location from 'expo-location';\r\n\r\nexport default useLocation = () => {\r\n       const [location, setLocation] = useState(null);\r\n\r\n\r\n       const getLocation = async () => {\r\n              try {\r\n                     let result = await Location.requestForegroundPermissionsAsync();\r\n                     if (!result.granted) return;\r\n                     let { coords: { latitude, longitude } } = await Location.getLastKnownPositionAsync();\r\n                     setLocation({ latitude, longitude });\r\n\r\n              } catch (error) {\r\n                     console.log(error);\r\n              }\r\n       }\r\n\r\n\r\n       useEffect(() => {\r\n              getLocation();\r\n\r\n       }, []);\r\n       return location;\r\n};\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,KAAKC,QAAQ,MAAM,eAAe;AAEzC,eAAeC,WAAW,GAAG,uBAAM;EAC5B,gBAAgCH,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAvCI,QAAQ;IAAEC,WAAW;EAG5B,IAAMC,WAAW;IAAA,6BAAG,aAAY;MACzB,IAAI;QACG,IAAIC,MAAM,SAASL,QAAQ,CAACM,iCAAiC,EAAE;QAC/D,IAAI,CAACD,MAAM,CAACE,OAAO,EAAE;QACrB,kCAAgDP,QAAQ,CAACQ,yBAAyB,EAAE;UAAA,+CAA9EC,MAAM;UAAIC,QAAQ,0BAARA,QAAQ;UAAEC,SAAS,0BAATA,SAAS;QACnCR,WAAW,CAAC;UAAEO,QAAQ,EAARA,QAAQ;UAAEC,SAAS,EAATA;QAAU,CAAC,CAAC;MAE3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACzB;IACP,CAAC;IAAA,gBAVKR,WAAW;MAAA;IAAA;EAAA,GAUhB;EAGDL,SAAS,CAAC,YAAM;IACTK,WAAW,EAAE;EAEpB,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,QAAQ;AACtB,CAAC"},"metadata":{},"sourceType":"module"}