{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from 'yup';\nimport useLocation from \"../hooks/useLocation\";\nimport { AppForm, AppFormField, AppFormPicker, SubmitButton } from \"../Components/forms\";\nimport Screen from \"../Components/Screen\";\nimport CategoryPickerItrm from \"../Components/CategoryPickerItrm\";\nimport FormImagePicker from \"../Components/forms/FormImagePicker\";\nimport listingsApi from \"../api/listings\";\nimport UploadScreen from \"./UploadScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(1).label(\"Title\"),\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n  description: Yup.string().label(\"Description\"),\n  category: Yup.object().required().nullable().label(\"Category\"),\n  images: Yup.array().min(1, \"Please select at least one image.\")\n});\nvar categories = [{\n  backgroundColor: \"#fc5c65\",\n  icon: \"floor-lamp\",\n  label: \"Furniture\",\n  value: 1\n}, {\n  backgroundColor: \"#fd9644\",\n  icon: \"car\",\n  label: \"Cars\",\n  value: 2\n}, {\n  backgroundColor: \"#fed330\",\n  icon: \"camera\",\n  label: \"Cameras\",\n  value: 3\n}, {\n  backgroundColor: \"#26de81\",\n  icon: \"cards\",\n  label: \"Games\",\n  value: 4\n}, {\n  backgroundColor: \"#2bcbba\",\n  icon: \"shoe-heel\",\n  label: \"Clothing\",\n  value: 5\n}, {\n  backgroundColor: \"#45aaf2\",\n  icon: \"basketball\",\n  label: \"Sports\",\n  value: 6\n}, {\n  backgroundColor: \"#4b7bec\",\n  icon: \"headphones\",\n  label: \"Movies & Music\",\n  value: 7\n}, {\n  backgroundColor: \"#a55eea\",\n  icon: \"book-open-variant\",\n  label: \"Books\",\n  value: 8\n}, {\n  backgroundColor: \"#778ca3\",\n  icon: \"application\",\n  label: \"Other\",\n  value: 9\n}];\nfunction LisingEditScreen(props) {\n  var location = useLocation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    uploadVisible = _useState2[0],\n    setUploadVisible = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    progress = _useState4[0],\n    setProgress = _useState4[1];\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (listing, _ref) {\n      var resetForm = _ref.resetForm;\n      setProgress(0);\n      setUploadVisible(true);\n      var result = yield listingsApi.addListing(_objectSpread(_objectSpread({}, listing), {}, {\n        location: location\n      }), function (progress) {\n        return setProgress(progress);\n      });\n      if (!result.ok) {\n        setUploadVisible(false);\n        return alert('Could not save the listing.');\n      }\n      resetForm();\n    });\n    return function handleSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Screen, {\n    style: styles.container,\n    children: [_jsx(UploadScreen, {\n      onDone: function onDone() {\n        return setUploadVisible(false);\n      },\n      progress: progress,\n      visible: uploadVisible\n    }), _jsxs(AppForm, {\n      initialValues: {\n        title: '',\n        price: '',\n        description: '',\n        category: null,\n        images: []\n      },\n      onSubmit: handleSubmit,\n      validationSchema: validationSchema,\n      children: [_jsx(FormImagePicker, {\n        name: \"images\"\n      }), _jsx(AppFormField, {\n        maxLength: 255,\n        name: \"title\",\n        placeholder: \"Title\"\n      }), _jsx(AppFormField, {\n        keyboardType: \"numeric\",\n        maxLength: 8,\n        name: \"price\",\n        placeholder: \"Price\",\n        width: 120\n      }), _jsx(AppFormPicker, {\n        items: categories,\n        name: \"category\",\n        numberOfColumns: 3,\n        PickerItemComponent: CategoryPickerItrm,\n        placeholder: \"Category\",\n        width: \"50%\"\n      }), _jsx(AppFormField, {\n        maxLength: 255,\n        multiline: true,\n        numberOfLines: 3,\n        name: \"description\",\n        placeholder: \"Description\"\n      }), _jsx(SubmitButton, {\n        title: \"Post\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  }\n});\nexport default LisingEditScreen;","map":{"version":3,"names":["React","useState","Yup","useLocation","AppForm","AppFormField","AppFormPicker","SubmitButton","Screen","CategoryPickerItrm","FormImagePicker","listingsApi","UploadScreen","validationSchema","object","shape","title","string","required","min","label","price","number","max","description","category","nullable","images","array","categories","backgroundColor","icon","value","LisingEditScreen","props","location","uploadVisible","setUploadVisible","progress","setProgress","handleSubmit","listing","resetForm","result","addListing","ok","alert","styles","container","StyleSheet","create","padding"],"sources":["D:/coues-React Native/Tools2Go/app/screens/LisingEditScreen.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport * as Yup from 'yup';\r\n\r\nimport useLocation from '../hooks/useLocation';\r\nimport { AppForm, AppFormField, AppFormPicker, SubmitButton } from '../Components/forms';\r\nimport Screen from '../Components/Screen';\r\nimport CategoryPickerItrm from '../Components/CategoryPickerItrm';\r\nimport FormImagePicker from '../Components/forms/FormImagePicker';\r\nimport listingsApi from '../api/listings';\r\nimport UploadScreen from './UploadScreen';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n       title: Yup.string().required().min(1).label(\"Title\"),\r\n       price: Yup.number().required().min(1).max(10000).label(\"Price\"),\r\n       description: Yup.string().label(\"Description\"),\r\n       category: Yup.object().required().nullable().label(\"Category\"),\r\n       images: Yup.array().min(1, \"Please select at least one image.\"),\r\n});\r\n\r\nconst categories = [\r\n       {\r\n              backgroundColor: \"#fc5c65\",\r\n              icon: \"floor-lamp\",\r\n              label: \"Furniture\",\r\n              value: 1,\r\n       },\r\n       {\r\n              backgroundColor: \"#fd9644\",\r\n              icon: \"car\",\r\n              label: \"Cars\",\r\n              value: 2,\r\n       },\r\n       {\r\n              backgroundColor: \"#fed330\",\r\n              icon: \"camera\",\r\n              label: \"Cameras\",\r\n              value: 3,\r\n       },\r\n       {\r\n              backgroundColor: \"#26de81\",\r\n              icon: \"cards\",\r\n              label: \"Games\",\r\n              value: 4,\r\n       },\r\n       {\r\n              backgroundColor: \"#2bcbba\",\r\n              icon: \"shoe-heel\",\r\n              label: \"Clothing\",\r\n              value: 5,\r\n       },\r\n       {\r\n              backgroundColor: \"#45aaf2\",\r\n              icon: \"basketball\",\r\n              label: \"Sports\",\r\n              value: 6,\r\n       },\r\n       {\r\n              backgroundColor: \"#4b7bec\",\r\n              icon: \"headphones\",\r\n              label: \"Movies & Music\",\r\n              value: 7,\r\n       },\r\n       {\r\n              backgroundColor: \"#a55eea\",\r\n              icon: \"book-open-variant\",\r\n              label: \"Books\",\r\n              value: 8,\r\n       },\r\n       {\r\n              backgroundColor: \"#778ca3\",\r\n              icon: \"application\",\r\n              label: \"Other\",\r\n              value: 9,\r\n       },\r\n];\r\n\r\n\r\n\r\nfunction LisingEditScreen(props) {\r\n       const location = useLocation();\r\n       const [uploadVisible, setUploadVisible] = useState(false);\r\n       const [progress, setProgress] = useState(0);\r\n\r\n       const handleSubmit = async (listing,{resetForm}) => {\r\n              setProgress(0);\r\n              setUploadVisible(true);\r\n              const result = await listingsApi.addListing(\r\n                     { ...listing, location },\r\n                     (progress) => setProgress(progress)\r\n\r\n              );\r\n\r\n              if (!result.ok) {\r\n                     setUploadVisible(false);\r\n                     return alert('Could not save the listing.');\r\n              }\r\n              resetForm();\r\n       }\r\n\r\n\r\n\r\n       return (\r\n              <Screen style={styles.container}>\r\n                     <UploadScreen\r\n                            onDone={() => setUploadVisible(false)}\r\n                            progress={progress}\r\n                            visible={uploadVisible} />\r\n                     <AppForm\r\n                            initialValues={{\r\n                                   title: '',\r\n                                   price: '',\r\n                                   description: '',\r\n                                   category: null,\r\n                                   images: [],\r\n                            }}\r\n                            onSubmit={handleSubmit}\r\n                            validationSchema={validationSchema}\r\n                     >\r\n                            <FormImagePicker name=\"images\" />\r\n                            <AppFormField maxLength={255} name=\"title\" placeholder=\"Title\" />\r\n                            <AppFormField keyboardType=\"numeric\" maxLength={8} name=\"price\" placeholder=\"Price\" width={120} />\r\n                            <AppFormPicker\r\n                                   items={categories}\r\n                                   name=\"category\"\r\n                                   numberOfColumns={3}\r\n                                   PickerItemComponent={CategoryPickerItrm}\r\n                                   placeholder=\"Category\"\r\n                                   width=\"50%\" />\r\n                            <AppFormField maxLength={255} multiline numberOfLines={3} name=\"description\" placeholder=\"Description\" />\r\n                            <SubmitButton title=\"Post\" />\r\n                     </AppForm>\r\n              </Screen>\r\n\r\n       );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n       container: {\r\n              padding: 10,\r\n       },\r\n});\r\n\r\nexport default LisingEditScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}