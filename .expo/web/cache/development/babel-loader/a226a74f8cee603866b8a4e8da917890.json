{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Input } from 'react-native-elements';\nimport React, { useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Login() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  function handleLogin() {}\n  return _jsxs(View, {\n    children: [_jsx(\"label\", {\n      children: \"Email\"\n    }), _jsx(Input, {\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      onChangeText: setEmail,\n      value: email\n    }), \"Password\", _jsx(Input, {\n      secureTextEntry: true,\n      onChangeText: setPassword,\n      value: password\n    }), _jsx(Button, {\n      title: \"Log In\",\n      onPress: handleLogin\n    })]\n  });\n}\nexport default Login;","map":{"version":3,"names":["Input","React","useState","useEffect","Login","email","setEmail","password","setPassword","handleLogin"],"sources":["D:/coues-React Native/Tools2Go/login.js"],"sourcesContent":["import { View, Text, TextInput, Button } from 'react-native';\r\nimport {  Input  } from 'react-native-elements';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Login() {\r\n       const [email, setEmail] = useState('');\r\n       const [password, setPassword] = useState('');\r\n\r\n       function handleLogin() {\r\n              // Perform login logic here\r\n       }\r\n\r\n       return (\r\n              <View>\r\n                     <label>Email</label>\r\n                     \r\n                     <Input \r\n                            autoCapitalize=\"none\"\r\n                            keyboardType=\"email-address\"\r\n                            onChangeText={setEmail}\r\n                            value={email}\r\n                     />\r\n                     Password\r\n                     <Input \r\n                            secureTextEntry\r\n                            onChangeText={setPassword}\r\n                            value={password}\r\n                     />\r\n                     <Button title=\"Log In\" onPress={handleLogin} />\r\n              </View>\r\n       );\r\n}\r\n\r\nexport default Login;"],"mappings":";;;;;AACA,SAAUA,KAAK,QAAS,uBAAuB;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAEnD,SAASC,KAAK,GAAG;EACV,gBAA0BF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BG,KAAK;IAAEC,QAAQ;EACtB,iBAAgCJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCK,QAAQ;IAAEC,WAAW;EAE5B,SAASC,WAAW,GAAG,CAEvB;EAEA,OACO,MAAC,IAAI;IAAA,WACE;MAAA,UAAO;IAAK,EAAQ,EAEpB,KAAC,KAAK;MACC,cAAc,EAAC,MAAM;MACrB,YAAY,EAAC,eAAe;MAC5B,YAAY,EAAEH,QAAS;MACvB,KAAK,EAAED;IAAM,EAClB,YAEF,OAAC,KAAK;MACC,eAAe;MACf,YAAY,EAAEG,WAAY;MAC1B,KAAK,EAAED;IAAS,EACrB,EACF,KAAC,MAAM;MAAC,KAAK,EAAC,QAAQ;MAAC,OAAO,EAAEE;IAAY,EAAG;EAAA,EAC/C;AAErB;AAEA,eAAeL,KAAK"},"metadata":{},"sourceType":"module"}