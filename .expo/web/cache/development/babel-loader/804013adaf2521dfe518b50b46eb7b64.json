{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from 'yup';\nimport Screen from \"../Components/Screen\";\nimport usersApi from \"../api/users\";\nimport authApi from \"../api/auth\";\nimport useAuth from \"../auth/useAuth\";\nimport { AppForm, AppFormField, SubmitButton, ErrorMessage } from \"../Components/forms\";\nimport useApi from \"../hooks/useApi\";\nimport ActivitiyIndicator from \"../Components/ActivitiyIndicator\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().required().min(4).label(\"Name\"),\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\")\n});\nfunction RegisterScreen(props) {\n  var registerApi = useApi(usersApi.register);\n  var loginApi = useApi(authApi.login);\n  var auth = useAuth();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* (userInfo) {\n      var result = yield registerApi.request(userInfo);\n      if (!result.ok) {\n        if (result.data) setError(result.data.error);else {\n          setError(\"An unexpected error occurred.\");\n          console.log(result);\n        }\n        return;\n      }\n      var _yield$loginApi$reque = yield loginApi.request(userInfo.email, userInfo.password),\n        authToken = _yield$loginApi$reque.data;\n      auth.logIn(authToken);\n    });\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(_Fragment, {\n    children: [_jsx(ActivitiyIndicator, {\n      visible: registerApi.loading || loginApi.loading\n    }), _jsx(Screen, {\n      style: styles.container,\n      children: _jsxs(AppForm, {\n        initialValues: {\n          name: '',\n          email: '',\n          password: ''\n        },\n        onSubmit: handleSubmit,\n        validationSchema: validationSchema,\n        children: [_jsx(ErrorMessage, {\n          error: error,\n          visible: error\n        }), _jsx(AppFormField, {\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          icon: \"account\",\n          name: \"name\",\n          placeholder: \"Name\"\n        }), _jsx(AppFormField, {\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          icon: \"email\",\n          keyboardType: \"email-address\",\n          name: \"email\",\n          placeholder: \"Email\",\n          textContentType: \"emailAddress\"\n        }), _jsx(AppFormField, {\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          icon: \"lock\",\n          name: \"password\",\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          textContentType: \"password\"\n        }), _jsx(SubmitButton, {\n          title: \"Register\"\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    alignSelf: 'center',\n    marginTop: 50,\n    marginBottom: 20\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","Yup","Screen","usersApi","authApi","useAuth","AppForm","AppFormField","SubmitButton","ErrorMessage","useApi","ActivitiyIndicator","validationSchema","object","shape","name","string","required","min","label","email","password","RegisterScreen","props","registerApi","register","loginApi","login","auth","error","setError","handleSubmit","userInfo","result","request","ok","data","console","log","authToken","logIn","loading","styles","container","StyleSheet","create","padding","logo","width","height","alignSelf","marginTop","marginBottom"],"sources":["D:/coues-React Native/Tools2Go/app/screens/RegisterScreen.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Image, StyleSheet } from 'react-native';\r\nimport * as Yup from 'yup';\r\n\r\nimport Screen from '../Components/Screen';\r\nimport usersApi from \"../api/users\";\r\nimport authApi from \"../api/auth\";\r\nimport useAuth from \"../auth/useAuth\";\r\nimport { AppForm, AppFormField, SubmitButton, ErrorMessage } from '../Components/forms';\r\nimport useApi from \"../hooks/useApi\";\r\nimport ActivitiyIndicator from '../Components/ActivitiyIndicator';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n       name: Yup.string().required().min(4).label(\"Name\"),\r\n       email: Yup.string().required().email().label(\"Email\"),\r\n       password: Yup.string().required().min(4).label(\"Password\"),\r\n});\r\n\r\nfunction RegisterScreen(props) {\r\n       const registerApi = useApi(usersApi.register);\r\n       const loginApi = useApi(authApi.login);\r\n       const auth = useAuth();\r\n       const [error, setError] = useState();\r\n\r\n       const handleSubmit = async (userInfo) => {\r\n              const result = await registerApi.request(userInfo);\r\n\r\n              if (!result.ok) {\r\n                     if (result.data) setError(result.data.error);\r\n                     else {\r\n                            setError(\"An unexpected error occurred.\");\r\n                            console.log(result);\r\n                     }\r\n                     return;\r\n              }\r\n\r\n              const { data: authToken } = await loginApi.request(\r\n                     userInfo.email,\r\n                     userInfo.password\r\n              );\r\n              auth.logIn(authToken);\r\n       };\r\n\r\n\r\n       return (\r\n              <>\r\n                     <ActivitiyIndicator visible={registerApi.loading || loginApi.loading} />\r\n                     <Screen style={styles.container}>\r\n                            <AppForm\r\n                                   initialValues={{ name: '', email: '', password: '' }}\r\n                                   onSubmit={handleSubmit}\r\n                                   validationSchema={validationSchema}\r\n                            >\r\n                                   <ErrorMessage error={error} visible={error} />\r\n                                   <AppFormField\r\n                                          autoCapitalize=\"none\"\r\n                                          autoCorrect={false}\r\n                                          icon=\"account\"\r\n                                          name=\"name\"\r\n                                          placeholder=\"Name\"\r\n                                   />\r\n                                   <AppFormField\r\n                                          autoCapitalize=\"none\"\r\n                                          autoCorrect={false}\r\n                                          icon=\"email\"\r\n                                          keyboardType=\"email-address\"\r\n                                          name=\"email\"\r\n                                          placeholder=\"Email\"\r\n                                          textContentType=\"emailAddress\"\r\n                                   />\r\n                                   <AppFormField\r\n                                          autoCapitalize=\"none\"\r\n                                          autoCorrect={false}\r\n                                          icon=\"lock\"\r\n                                          name=\"password\"\r\n                                          placeholder=\"Password\"\r\n                                          secureTextEntry\r\n                                          textContentType=\"password\"\r\n                                   />\r\n                                   <SubmitButton title=\"Register\" />\r\n                            </AppForm>\r\n\r\n                     </Screen>\r\n              </>\r\n       );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n       container: {\r\n              padding: 10,\r\n       },\r\n       logo: {\r\n              width: 80,\r\n              height: 80,\r\n              alignSelf: 'center',\r\n              marginTop: 50,\r\n              marginBottom: 20,\r\n       },\r\n});\r\n\r\nexport default RegisterScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}