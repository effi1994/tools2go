{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../Components/Screen\";\nimport Card from \"../Components/Card\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function ListingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    listings = _useState2[0],\n    setListings = _useState2[1];\n  useEffect(function () {\n    loadListings();\n  }, []);\n  var loadListings = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      debugger;\n      var response = yield listingsApi.getListings();\n      setListings(response.data);\n      console.log(response.data[0].images[0].url);\n    });\n    return function loadListings() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(Screen, {\n    style: styles.screen,\n    children: _jsx(FlatList, {\n      data: listings,\n      keyExtractor: function keyExtractor(listing) {\n        return listing.id.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(Card, {\n          title: item.title,\n          subTitle: \"$\" + item.price,\n          imageUrl: item.images[0].url,\n          onPress: function onPress() {\n            return navigation.navigate(routes.LISTING_DETAILS, item);\n          }\n        });\n      }\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light\n  }\n});\nexport default ListingsScreen;","map":{"version":3,"names":["React","useState","useEffect","routes","Screen","Card","colors","listingsApi","ListingsScreen","navigation","listings","setListings","loadListings","response","getListings","data","console","log","images","url","styles","screen","listing","id","toString","item","title","price","navigate","LISTING_DETAILS","StyleSheet","create","padding","backgroundColor","light"],"sources":["D:/coues-React Native/Tools2Go/app/screens/ListingsScreen.js"],"sourcesContent":["import React ,{useState,useEffect}from 'react';\r\nimport { FlatList, StyleSheet, Text, View } from 'react-native';\r\nimport routes from '../navigation/routes';\r\nimport Screen from '../Components/Screen';\r\nimport Card from '../Components/Card';\r\nimport colors from '../config/colors';\r\nimport listingsApi from '../api/listings';\r\n\r\nexport function ListingsScreen({ navigation }) {\r\n       const [listings, setListings] = useState([]);\r\n\r\n       useEffect(() => {\r\n              loadListings();\r\n       },[]);\r\n\r\n       const loadListings = async () => {\r\n              debugger;\r\n              const response = await listingsApi.getListings();\r\n              setListings(response.data);\r\n              console.log(response.data[0].images[0].url);\r\n       };\r\n\r\n\r\n\r\n       return (\r\n              <Screen style={styles.screen} >\r\n                     <FlatList\r\n                            data={listings}\r\n                            keyExtractor={listing => listing.id.toString()}\r\n                            renderItem={({ item }) =>\r\n                                   <Card\r\n                                          title={item.title}\r\n                                          subTitle={\"$\" + item.price}\r\n                                          imageUrl={item.images[0].url}\r\n                                          onPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\r\n                                   />}\r\n\r\n                     />\r\n\r\n              </Screen>\r\n\r\n       );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n       screen: {\r\n              padding: 20,\r\n              backgroundColor: colors.light\r\n       }\r\n})\r\nexport default ListingsScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAE/C,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,IAAI;AACX,OAAOC,MAAM;AACb,OAAOC,WAAW;AAAwB;AAE1C,OAAO,SAASC,cAAc,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EACpC,gBAAgCR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCS,QAAQ;IAAEC,WAAW;EAE5BT,SAAS,CAAC,YAAM;IACTU,YAAY,EAAE;EACrB,CAAC,EAAC,EAAE,CAAC;EAEL,IAAMA,YAAY;IAAA,8BAAG,aAAY;MAC1B;MACA,IAAMC,QAAQ,SAASN,WAAW,CAACO,WAAW,EAAE;MAChDH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;IAClD,CAAC;IAAA,gBALKP,YAAY;MAAA;IAAA;EAAA,GAKjB;EAID,OACO,KAAC,MAAM;IAAC,KAAK,EAAEQ,MAAM,CAACC,MAAO;IAAA,UACtB,KAAC,QAAQ;MACF,IAAI,EAAEX,QAAS;MACf,YAAY,EAAE,sBAAAY,OAAO;QAAA,OAAIA,OAAO,CAACC,EAAE,CAACC,QAAQ,EAAE;MAAA,CAAC;MAC/C,UAAU,EAAE;QAAA,IAAGC,IAAI,SAAJA,IAAI;QAAA,OACZ,KAAC,IAAI;UACE,KAAK,EAAEA,IAAI,CAACC,KAAM;UAClB,QAAQ,EAAE,GAAG,GAAGD,IAAI,CAACE,KAAM;UAC3B,QAAQ,EAAEF,IAAI,CAACP,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;UAC7B,OAAO,EAAE;YAAA,OAAMV,UAAU,CAACmB,QAAQ,CAACzB,MAAM,CAAC0B,eAAe,EAAEJ,IAAI,CAAC;UAAA;QAAC,EACtE;MAAA;IAAC;EAEf,EAEA;AAGvB;AAAC;AAED,IAAML,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC1BV,MAAM,EAAE;IACDW,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE3B,MAAM,CAAC4B;EAC/B;AACP,CAAC,CAAC;AACF,eAAe1B,cAAc"},"metadata":{},"sourceType":"module"}